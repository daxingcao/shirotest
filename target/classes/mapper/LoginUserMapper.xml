<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caodaxing.dao.LoginUserMapper">
  <resultMap id="BaseResultMap" type="com.caodaxing.entity.LoginUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="LAST_DATE" jdbcType="DATE" property="lastDate" />
    <result column="CREATE_DATE" jdbcType="DATE" property="createDate" />
    <result column="UPDATE_DATE" jdbcType="DATE" property="updateDate" />
    <result column="LOGIN_STATUS" jdbcType="INTEGER" property="loginStatus" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="HEAD_FILE_ID" jdbcType="INTEGER" property="headFileId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, USERNAME, PASSWORD, LAST_DATE, CREATE_DATE, UPDATE_DATE, LOGIN_STATUS, USER_ID, 
    HEAD_FILE_ID
  </sql>
  <select id="selectByExample" parameterType="com.caodaxing.entity.LoginUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from login_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.caodaxing.entity.LoginUserExample">
    delete from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.caodaxing.entity.LoginUser">
    insert into login_user (id, USERNAME, PASSWORD, 
      LAST_DATE, CREATE_DATE, UPDATE_DATE, 
      LOGIN_STATUS, USER_ID, HEAD_FILE_ID
      )
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{lastDate,jdbcType=DATE}, #{createDate,jdbcType=DATE}, #{updateDate,jdbcType=DATE}, 
      #{loginStatus,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{headFileId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.caodaxing.entity.LoginUser">
    insert into login_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="lastDate != null">
        LAST_DATE,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
      <if test="loginStatus != null">
        LOGIN_STATUS,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="headFileId != null">
        HEAD_FILE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastDate != null">
        #{lastDate,jdbcType=DATE},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=DATE},
      </if>
      <if test="loginStatus != null">
        #{loginStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="headFileId != null">
        #{headFileId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.caodaxing.entity.LoginUserExample" resultType="java.lang.Long">
    select count(*) from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update login_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.lastDate != null">
        LAST_DATE = #{record.lastDate,jdbcType=DATE},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.updateDate != null">
        UPDATE_DATE = #{record.updateDate,jdbcType=DATE},
      </if>
      <if test="record.loginStatus != null">
        LOGIN_STATUS = #{record.loginStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.headFileId != null">
        HEAD_FILE_ID = #{record.headFileId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update login_user
    set id = #{record.id,jdbcType=BIGINT},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      LAST_DATE = #{record.lastDate,jdbcType=DATE},
      CREATE_DATE = #{record.createDate,jdbcType=DATE},
      UPDATE_DATE = #{record.updateDate,jdbcType=DATE},
      LOGIN_STATUS = #{record.loginStatus,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      HEAD_FILE_ID = #{record.headFileId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.caodaxing.entity.LoginUser">
    update login_user
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastDate != null">
        LAST_DATE = #{lastDate,jdbcType=DATE},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=DATE},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=DATE},
      </if>
      <if test="loginStatus != null">
        LOGIN_STATUS = #{loginStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="headFileId != null">
        HEAD_FILE_ID = #{headFileId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.caodaxing.entity.LoginUser">
    update login_user
    set USERNAME = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      LAST_DATE = #{lastDate,jdbcType=DATE},
      CREATE_DATE = #{createDate,jdbcType=DATE},
      UPDATE_DATE = #{updateDate,jdbcType=DATE},
      LOGIN_STATUS = #{loginStatus,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      HEAD_FILE_ID = #{headFileId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>